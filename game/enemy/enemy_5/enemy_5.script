local EnemyInfo = require "game.enemy.enemy_info"

local function die(self)
	spine.play_anim(self.url_spinemodel, "dead", go.PLAYBACK_ONCE_FORWARD, { track = 1 }, function ()
		go.delete()
	end)
end

local function spawn_trap(self, trap_factory_url)
	local enemy_pos = go.get_position()
	local offset = vmath.vector3((math.random() - 0.5) * 50, (math.random() - 0.5) * 50, 0)
	local trap_pos = enemy_pos + offset
	factory.create(trap_factory_url, trap_pos)
end

function init(self)
	self.player_id = self.player_id
	self.enemy_id = self.enemy_id or 3 -- ИД Сатир
	self.wave_number = self.wave_number or 1

	local data = EnemyInfo[self.enemy_id]
	self.max_hp = math.floor(data.health * (data.hpMultiplierPerWave ^ self.wave_number))
	self.current_hp = self.max_hp
	self.speed = data.speed * (data.speedMultiplierPerWave ^ self.wave_number)

	self.url_spinemodel = "#spinemodel"

	self.is_moving = false
	self.trap_cooldown = 5
	self.trap_timer = self.trap_cooldown

	self.trap_factory_mine = msg.url("#minefactory")
	self.trap_factory_cocoon = msg.url("#coconfactory")

	spine.play_anim(self.url_spinemodel, "idle", go.PLAYBACK_LOOP_FORWARD, { track = 1 })
end

function update(self, dt)
	if not self.player_id then return end

	local player_pos = go.get_position(self.player_id)
	local enemy_pos = go.get_position()
	local direction = player_pos - enemy_pos
	local distance = vmath.length(direction)

	local safe_distance = 150
	if distance > safe_distance then
		direction = vmath.normalize(direction)
		local new_pos = enemy_pos + direction * self.speed * dt
		go.set_position(new_pos)
		if not self.is_moving then
			spine.play_anim(self.url_spinemodel, "run", go.PLAYBACK_LOOP_FORWARD)
			self.is_moving = true
		end
	else
		if self.is_moving then
			spine.play_anim(self.url_spinemodel, "idle", go.PLAYBACK_LOOP_FORWARD)
			self.is_moving = false
		end
	end

	self.trap_timer = self.trap_timer - dt
	if self.trap_timer <= 0 then
		if math.random() < 0.5 then
			spawn_trap(self, self.trap_factory_mine)
		else
			spawn_trap(self, self.trap_factory_cocoon)
		end
		self.trap_timer = self.trap_cooldown
	end

	local scale = go.get_scale()
	if direction.x < 0 then
		scale.x = -math.abs(scale.x)
	else
		scale.x = math.abs(scale.x)
	end
	go.set(go.get_id(), "scale", scale)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("damage") then
		self.current_hp = self.current_hp - message.amount
		if self.current_hp <= 0 then
			die(self)
		end
	elseif message_id == hash("request_player_id") then
		msg.post(sender, "response_enemy_id", { enemy_url = go.get_id() })
	elseif message_id == hash("player_id") then
		self.player_id = message.player_id
	end
end
